** Number of divisors of a number

ll numberofDivisor( ll n){
    map<ll,int>mp;
    while( n%2==0){
        mp[2]++;
        n/=2;
    }

    for (ll i = 3; i <= sqrt(n); i+=2)
    {
        while( n % i == 0){
            mp[i]++;
            n/=i;
        }
    }

    if(n>2) mp[n]++;

    ll ans = 1;
    for( auto i : mp){
        ans *= (i.second + 1);
    }

    return ans;

}


** generate dicvisors
void find_div(ll n, vector<ll>&v){

      for(ll i = 1; i*i <= n; i++){
      if(n % i == 0){
        v.push_back(i);
        if( n / i != i ){
          v.push_back(n/i);
        }
      }
   }

}


** number of divisors till 10^6
for (int i = 1; i <=1000000; i++)
{
    for (int j = i; j <= 1000000; j+=i)
    {
        arr[j]++;
    }
}



//sum of divisors 10^6
const int N = 1e6+2;
vector<int>sums(N);

void precal(){

    for (int i = 1; i <= N; i++)
    {
        for (int j = i; j <= N; j+=i)
        {
            sums[j] += i;
        }
        
    }
    
}